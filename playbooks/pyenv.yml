---
- hosts: all
  tasks:
  - name: Install python version
    ansible.builtin.shell:
      cmd: pyenv versions | grep "{{ item.version }}" || pyenv install {{ item.version }}
    with_items: "{{ python_versions }}"
  - name: Create ~/.virtualenvs
    ansible.builtin.file:
      path: ~/.virtualenvs
      state: directory
  # Consider doing all the below in a cleaner way
  - name: Create venv per python version
    ansible.builtin.shell:
      cmd: |
        pyenv shell {{ item.version }}
        python -m venv ~/.virtualenvs/{{ item.venv }}
      creates: ~/.virtualenvs/{{ item.venv }}
    with_items: "{{ python_versions }}"
  - name: pip at latest
    register: install_output
    ansible.builtin.shell: |
      source ~/.virtualenvs/{{ item.venv }}/bin/activate
      pip install --upgrade pip
    with_items: "{{ python_versions }}"
    changed_when: "'Successfully installed' in install_output.stdout"
  - name: Install python modules
    register: install_output
    ansible.builtin.shell: |
      source ~/.virtualenvs/{{ item[0].venv }}/bin/activate
      pip install {{ item[1] }}
    loop: "{{ python_versions | product(python_packages) | list }}"
    changed_when: "'Successfully installed' in install_output.stdout"
